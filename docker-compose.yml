version: '3.9'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: examplepassword
    volumes:
      - mongo-data:/data/db
    networks:
      - backend

  chart-api:
    platform: linux/amd64
    build:
      context: ./services/chart-api
      dockerfile: Dockerfile
    container_name: chart-api
    depends_on:
      - rabbitmq
      - mongo
    ports:
      - "8081:8081"
    networks:
      - backend

  posts-api:
    build:
      context: ./services/post-api
      dockerfile: Dockerfile
    container_name: post-api
    depends_on:
      - rabbitmq
      - mongo
    ports:
      - "8000:8000"
    networks:
      - backend
    environment:
      - MONGODB_URI=mongodb://root:examplepassword@mongo:27017
      - MONGODB_DBNAME=feigram
      - PYTHONUNBUFFERED=1
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000

  likes-api:
    build:
      context: ./services/likes-api
      dockerfile: Dockerfile
    container_name: like-api
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    ports:
      - "8082:8082"
    networks:
      - backend
    environment:
      - MONGODB_URI=mongodb://root:examplepassword@mongo:27017
      - MONGODB_DBNAME=likes

  feed-api:
    build:
      context: ./services/feed-api
      dockerfile: Dockerfile
    container_name: feed-api
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    ports:
      - "8085:8085"
    networks:
      - backend
    environment:
      - MONGODB_URI=mongodb://root:examplepassword@mongo:27017
      - MONGODB_DBNAME=feed

networks:
  backend:
    driver: bridge

volumes:
  mongo-data:
