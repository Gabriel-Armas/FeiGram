services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend

  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: profiledb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - profile_data:/var/lib/postgresql/data
    networks:
      - backend

  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: examplepassword
    volumes:
      - mongo-data:/data/db
    networks:
      - backend

  neo4j:
    image: neo4j:5
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/admin123
    volumes:
      - neo4j_data:/data
    networks:
      - backend

  chart-api:
    platform: linux/amd64
    build:
      context: ./services/chart-api
      dockerfile: Dockerfile
    container_name: chart-api
    depends_on:
      - rabbitmq
      - mongo
    ports:
      - "8081:8081"
    networks:
      - backend

  posts-api:
    build:
      context: ./services/post-api
      dockerfile: Dockerfile
    container_name: post-api
    depends_on:
      - rabbitmq
      - mongo
    ports:
      - "8000:8000"
    networks:
      - backend
    environment:
      - MONGODB_URI=mongodb://root:examplepassword@mongo:27017
      - MONGODB_DBNAME=feigram
      - PYTHONUNBUFFERED=1
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000

  likes-api:
    build:
      context: ./services/likes-api
      dockerfile: Dockerfile
    container_name: likes-api
    depends_on:
      - rabbitmq
      - mongo
    ports:
      - "8082:8082"
    networks:
      - backend
    environment:
      - MONGODB_URI=mongodb://root:examplepassword@mongo:27017
      - MONGODB_DBNAME=feigram

  feed-api:
    build:
      context: ./services/feed-api
      dockerfile: Dockerfile
    container_name: feed-api
    depends_on:
      - rabbitmq
      - mongo
      - likes-api
      - posts-api
    ports:
      - "8085:8085"
    networks:
      - backend
    environment:
      - MONGODB_URI=mongodb://root:examplepassword@mongo:27017
      - MONGODB_DBNAME=feigram
      - PYTHONUNBUFFERED=1
    command: uvicorn src.main:app --host 0.0.0.0 --port 8085

  follow-api:
    build:
      context: ./services/follow-api
    container_name: follow-api
    ports:
      - "8086:8086"
    networks:
      - backend
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=admin123
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      - neo4j
      - rabbitmq

  profile-api:
    platform: linux/amd64
    build:
      context: ./services/profile-api
    ports:
      - "8089:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=profiledb;Username=postgres;Password=admin123
      - RabbitMQ__HostName=rabbitmq  
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - backend


networks:
  backend:
    driver: bridge

volumes:
  mongo-data:
  neo4j_data:
  profile_data:
